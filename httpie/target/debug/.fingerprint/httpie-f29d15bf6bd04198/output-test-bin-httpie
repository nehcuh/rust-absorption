{"$message_type":"diagnostic","message":"the trait bound `SubCommand: Clone` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":109,"byte_end":119,"line_start":6,"line_end":6,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    subcmd: SubCommand,","highlight_start":13,"highlight_end":23}],"label":"the trait `Clone` is not implemented for `SubCommand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `ArgMatches::remove_one`","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/parser/matches/arg_matches.rs","byte_start":15066,"byte_end":15071,"line_start":412,"line_end":412,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> {","highlight_start":32,"highlight_end":37}],"label":"required by this bound in `ArgMatches::remove_one`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `SubCommand: Clone` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    subcmd: SubCommand,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Clone` is not implemented for `SubCommand`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `ArgMatches::remove_one`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/parser/matches/arg_matches.rs:412:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `ArgMatches::remove_one`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `SubCommand: Clone` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":109,"byte_end":119,"line_start":6,"line_end":6,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    subcmd: SubCommand,","highlight_start":13,"highlight_end":23}],"label":"the trait `Clone` is not implemented for `SubCommand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required by a bound in `ArgMatches::remove_one`","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/parser/matches/arg_matches.rs","byte_start":15066,"byte_end":15071,"line_start":412,"line_end":412,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> {","highlight_start":32,"highlight_end":37}],"label":"required by this bound in `ArgMatches::remove_one`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `SubCommand: Clone` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    subcmd: SubCommand,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Clone` is not implemented for `SubCommand`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `ArgMatches::remove_one`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/parser/matches/arg_matches.rs:412:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn remove_one<T: Any + Clone + Send + Sync + 'static>(&mut self, id: &str) -> Option<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `ArgMatches::remove_one`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<SubCommand>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81802,"byte_end":81814,"line_start":2630,"line_end":2630,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"        (&&&&&&auto).value_parser()","highlight_start":22,"highlight_end":34}],"label":"method cannot be called on `&&&&&&_infer_ValueParser_for<SubCommand>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":101,"byte_end":107,"line_start":6,"line_end":6,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    subcmd: SubCommand,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clap::value_parser!","def_site_span":{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81610,"byte_end":81635,"line_start":2626,"line_end":2626,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! value_parser {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":142,"byte_end":161,"line_start":10,"line_end":10,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub enum SubCommand {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy 8 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":75196,"byte_end":75232,"line_start":2439,"line_end":2439,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);","highlight_start":1,"highlight_end":37}],"label":"doesn't satisfy `_: _impls_FromStr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`SubCommand: ValueEnum`\nwhich is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\n`SubCommand: Clone`\nwhich is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\n`SubCommand: ValueParserFactory`\nwhich is required by `&&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueParserFactory`\n`SubCommand: From<OsString>`\nwhich is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\n`SubCommand: Clone`\nwhich is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\n`SubCommand: From<&'s std::ffi::OsStr>`\nwhich is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\n`SubCommand: Clone`\nwhich is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\n`SubCommand: From<std::string::String>`\nwhich is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\n`SubCommand: Clone`\nwhich is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\n`SubCommand: From<&'s str>`\nwhich is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\n`SubCommand: Clone`\nwhich is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\n`SubCommand: FromStr`\nwhich is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\n`SubCommand: Clone`\nwhich is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":69750,"byte_end":69778,"line_start":2276,"line_end":2276,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"pub trait ValueParserFactory {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs","byte_start":10518,"byte_end":10552,"line_start":292,"line_end":292,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait ValueEnum: Sized + Clone {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","byte_start":22561,"byte_end":22585,"line_start":582,"line_end":582,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait From<T>: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs","byte_start":29090,"byte_end":29114,"line_start":798,"line_end":798,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait FromStr: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider annotating `SubCommand` with `#[derive(Clone)]`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":142,"byte_end":142,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub enum SubCommand {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(Clone)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<SubCommand>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    subcmd: SubCommand,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&&&&&&_infer_ValueParser_for<SubCommand>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum SubCommand {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 8 bounds\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2439:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: _impls_FromStr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m             `SubCommand: ValueEnum`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `SubCommand: ValueParserFactory`\u001b[0m\n\u001b[0m             which is required by `&&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueParserFactory`\u001b[0m\n\u001b[0m             `SubCommand: From<OsString>`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `SubCommand: From<&'s std::ffi::OsStr>`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `SubCommand: From<std::string::String>`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `SubCommand: From<&'s str>`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `SubCommand: FromStr`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2276:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueParserFactory {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs:292:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueEnum: Sized + Clone {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:582:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait From<T>: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs:798:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m798\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FromStr: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clap::value_parser` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `SubCommand` with `#[derive(Clone)]`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ #[derive(Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum SubCommand {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<SubCommand>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81802,"byte_end":81814,"line_start":2630,"line_end":2630,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"        (&&&&&&auto).value_parser()","highlight_start":22,"highlight_end":34}],"label":"method cannot be called on `&&&&&&_infer_ValueParser_for<SubCommand>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":101,"byte_end":107,"line_start":6,"line_end":6,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    subcmd: SubCommand,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clap::value_parser!","def_site_span":{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81610,"byte_end":81635,"line_start":2626,"line_end":2626,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! value_parser {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":142,"byte_end":161,"line_start":10,"line_end":10,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub enum SubCommand {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy 8 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":75196,"byte_end":75232,"line_start":2439,"line_end":2439,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);","highlight_start":1,"highlight_end":37}],"label":"doesn't satisfy `_: _impls_FromStr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`SubCommand: ValueEnum`\nwhich is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\n`SubCommand: Clone`\nwhich is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\n`SubCommand: ValueParserFactory`\nwhich is required by `&&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueParserFactory`\n`SubCommand: From<OsString>`\nwhich is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\n`SubCommand: Clone`\nwhich is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\n`SubCommand: From<&'s std::ffi::OsStr>`\nwhich is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\n`SubCommand: Clone`\nwhich is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\n`SubCommand: From<std::string::String>`\nwhich is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\n`SubCommand: Clone`\nwhich is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\n`SubCommand: From<&'s str>`\nwhich is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\n`SubCommand: Clone`\nwhich is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\n`SubCommand: FromStr`\nwhich is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\n`SubCommand: Clone`\nwhich is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":69750,"byte_end":69778,"line_start":2276,"line_end":2276,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"pub trait ValueParserFactory {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs","byte_start":10518,"byte_end":10552,"line_start":292,"line_end":292,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait ValueEnum: Sized + Clone {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","byte_start":22561,"byte_end":22585,"line_start":582,"line_end":582,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait From<T>: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs","byte_start":29090,"byte_end":29114,"line_start":798,"line_end":798,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait FromStr: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider annotating `SubCommand` with `#[derive(Clone)]`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":142,"byte_end":142,"line_start":10,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub enum SubCommand {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(Clone)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<SubCommand>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    subcmd: SubCommand,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&&&&&&_infer_ValueParser_for<SubCommand>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum SubCommand {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 8 bounds\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2439:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: _impls_FromStr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m             `SubCommand: ValueEnum`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `SubCommand: ValueParserFactory`\u001b[0m\n\u001b[0m             which is required by `&&&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_ValueParserFactory`\u001b[0m\n\u001b[0m             `SubCommand: From<OsString>`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `SubCommand: From<&'s std::ffi::OsStr>`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `SubCommand: From<std::string::String>`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `SubCommand: From<&'s str>`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `SubCommand: FromStr`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m             `SubCommand: Clone`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<SubCommand>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2276:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueParserFactory {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs:292:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueEnum: Sized + Clone {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:582:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait From<T>: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs:798:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m798\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FromStr: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clap::value_parser` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `SubCommand` with `#[derive(Clone)]`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ #[derive(Clone)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum SubCommand {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<KvPair>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81802,"byte_end":81814,"line_start":2630,"line_end":2630,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"        (&&&&&&auto).value_parser()","highlight_start":22,"highlight_end":34}],"label":"method cannot be called on `&&&&&&_infer_ValueParser_for<KvPair>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":309,"byte_end":313,"line_start":23,"line_end":23,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"    body: Vec<KvPair>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clap::value_parser!","def_site_span":{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81610,"byte_end":81635,"line_start":2626,"line_end":2626,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! value_parser {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":348,"byte_end":361,"line_start":27,"line_end":27,"column_start":1,"column_end":14,"is_primary":false,"text":[{"text":"struct KvPair {","highlight_start":1,"highlight_end":14}],"label":"doesn't satisfy 7 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":75196,"byte_end":75232,"line_start":2439,"line_end":2439,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);","highlight_start":1,"highlight_end":37}],"label":"doesn't satisfy `_: _impls_FromStr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`KvPair: ValueEnum`\nwhich is required by `&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueEnum`\n`KvPair: ValueParserFactory`\nwhich is required by `&&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueParserFactory`\n`KvPair: From<OsString>`\nwhich is required by `&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsString`\n`KvPair: From<&'s std::ffi::OsStr>`\nwhich is required by `&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsStr`\n`KvPair: From<std::string::String>`\nwhich is required by `&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_String`\n`KvPair: From<&'s str>`\nwhich is required by `&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_str`\n`KvPair: FromStr`\nwhich is required by `_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_FromStr`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":69750,"byte_end":69778,"line_start":2276,"line_end":2276,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"pub trait ValueParserFactory {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs","byte_start":10518,"byte_end":10552,"line_start":292,"line_end":292,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait ValueEnum: Sized + Clone {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","byte_start":22561,"byte_end":22585,"line_start":582,"line_end":582,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait From<T>: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs","byte_start":29090,"byte_end":29114,"line_start":798,"line_end":798,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait FromStr: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<KvPair>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    body: Vec<KvPair>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&&&&&&_infer_ValueParser_for<KvPair>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct KvPair {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 7 bounds\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2439:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: _impls_FromStr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m             `KvPair: ValueEnum`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `KvPair: ValueParserFactory`\u001b[0m\n\u001b[0m             which is required by `&&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueParserFactory`\u001b[0m\n\u001b[0m             `KvPair: From<OsString>`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `KvPair: From<&'s std::ffi::OsStr>`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `KvPair: From<std::string::String>`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `KvPair: From<&'s str>`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `KvPair: FromStr`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2276:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueParserFactory {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs:292:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueEnum: Sized + Clone {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:582:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait From<T>: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs:798:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m798\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FromStr: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clap::value_parser` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<KvPair>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81802,"byte_end":81814,"line_start":2630,"line_end":2630,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"        (&&&&&&auto).value_parser()","highlight_start":22,"highlight_end":34}],"label":"method cannot be called on `&&&&&&_infer_ValueParser_for<KvPair>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":309,"byte_end":313,"line_start":23,"line_end":23,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"    body: Vec<KvPair>,","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"clap::value_parser!","def_site_span":{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":81610,"byte_end":81635,"line_start":2626,"line_end":2626,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! value_parser {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/main.rs","byte_start":348,"byte_end":361,"line_start":27,"line_end":27,"column_start":1,"column_end":14,"is_primary":false,"text":[{"text":"struct KvPair {","highlight_start":1,"highlight_end":14}],"label":"doesn't satisfy 7 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":75196,"byte_end":75232,"line_start":2439,"line_end":2439,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);","highlight_start":1,"highlight_end":37}],"label":"doesn't satisfy `_: _impls_FromStr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`KvPair: ValueEnum`\nwhich is required by `&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueEnum`\n`KvPair: ValueParserFactory`\nwhich is required by `&&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueParserFactory`\n`KvPair: From<OsString>`\nwhich is required by `&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsString`\n`KvPair: From<&'s std::ffi::OsStr>`\nwhich is required by `&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsStr`\n`KvPair: From<std::string::String>`\nwhich is required by `&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_String`\n`KvPair: From<&'s str>`\nwhich is required by `&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_str`\n`KvPair: FromStr`\nwhich is required by `_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_FromStr`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs","byte_start":69750,"byte_end":69778,"line_start":2276,"line_end":2276,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"pub trait ValueParserFactory {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs","byte_start":10518,"byte_end":10552,"line_start":292,"line_end":292,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait ValueEnum: Sized + Clone {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs","byte_start":22561,"byte_end":22585,"line_start":582,"line_end":582,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait From<T>: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs","byte_start":29090,"byte_end":29114,"line_start":798,"line_end":798,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"pub trait FromStr: Sized {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `value_parser` exists for reference `&&&&&&_infer_ValueParser_for<KvPair>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    body: Vec<KvPair>,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&&&&&&_infer_ValueParser_for<KvPair>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct KvPair {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 7 bounds\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2439:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct _infer_ValueParser_for<T>(std::marker::PhantomData<T>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: _impls_FromStr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m             `KvPair: ValueEnum`\u001b[0m\n\u001b[0m             which is required by `&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueEnum`\u001b[0m\n\u001b[0m             `KvPair: ValueParserFactory`\u001b[0m\n\u001b[0m             which is required by `&&&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_ValueParserFactory`\u001b[0m\n\u001b[0m             `KvPair: From<OsString>`\u001b[0m\n\u001b[0m             which is required by `&&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsString`\u001b[0m\n\u001b[0m             `KvPair: From<&'s std::ffi::OsStr>`\u001b[0m\n\u001b[0m             which is required by `&&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_OsStr`\u001b[0m\n\u001b[0m             `KvPair: From<std::string::String>`\u001b[0m\n\u001b[0m             which is required by `&&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_String`\u001b[0m\n\u001b[0m             `KvPair: From<&'s str>`\u001b[0m\n\u001b[0m             which is required by `&_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_From_str`\u001b[0m\n\u001b[0m             `KvPair: FromStr`\u001b[0m\n\u001b[0m             which is required by `_infer_ValueParser_for<KvPair>: clap::builder::impl_prelude::_impls_FromStr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `From`, `FromStr`, `ValueEnum`,  and `ValueParserFactory` must be implemented\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/builder/value_parser.rs:2276:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueParserFactory {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.cargo/registry/src/mirrors.ustc.edu.cn-04b7754156161b43/clap_builder-4.5.36/src/derive.rs:292:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait ValueEnum: Sized + Clone {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs:582:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait From<T>: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/huchen/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs:798:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m798\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait FromStr: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `clap::value_parser` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `cli`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":799,"byte_end":802,"line_start":45,"line_end":45,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let cli = Cli::parse();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":799,"byte_end":802,"line_start":45,"line_end":45,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let cli = Cli::parse();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"_cli","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cli`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let cli = Cli::parse();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cli`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 6 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
